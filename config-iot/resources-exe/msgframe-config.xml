<?xml version="1.0" encoding="UTF-8"?>
<!--配置文件版本：2.0-->
<msgframeCfg xmlns="http://www.asiainfo.com/msgframe"> 
  <!-- 客户端所属中心 -->  
  <name>iot</name>  
  <!--全局配置-->  
  <globalCfg>
    <!--消息生产端消息注入处理类，可以不配或者多配，在发送时可以在消息发送前执行，配置类的全路径且继承接口 com.ai.aif.msgframe.common.hook.ISendMessageHook-->
    <prodInjection>com.ai.aif.msgframe.extend.appframe.hook.RecordSendMessageHook</prodInjection>
    <prodInjection>com.ai.aif.msgframe.extend.es.hook.impl.SendMessageHookESImpl</prodInjection>
    <!--消息消费端消息注入处理类，可以不配或者多配，在消费时可以在消息处理业务前执行，配置类的全路径且继承接口 com.ai.aif.msgframe.common.hook.IConsumeMessageHook -->
    <consInjection>com.ai.aif.msgframe.extend.es.hook.impl.ConsumeMessageHookESImpl</consInjection>
    <consInjection>com.ai.aif.msgframe.extend.appframe.hook.RecordConsumeMessageHook</consInjection>
    <warmUpper>com.ai.iot.consumer.warm.WarmUpperMsg</warmUpper>
  </globalCfg>
  <!--后面都是从控制台拉取得数据,需要发送的topic或者queue-->
  <destinations timeout="2000" resendtimes="3" resenddelay="1000">
	<queue fromCenter="iot-csf" order="false" name="IotOrder2Billing" belong="iotCenter-csf" type="event" number="4"/>

  </destinations>
  <!--subscribeCenter 订阅的中心，统一化配置-->
  <subscribes> 
  </subscribes>  
  <!-- containClusters: 定义了中心部署在哪些集群上 -->  
  <centers> 
	<center name="iotCenter-csf" containClusters="cluster-2"/>

  </centers>  
  <clusters> 
	<cluster name="cluster-2" poolSize="1" type="ActiveMQ">
      <url>failover:(tcp://10.78.229.168:20001)</url>  
      <url>failover:(tcp://10.78.229.169:20001)</url>  
      <url>failover:(tcp://10.78.229.170:20001)</url>  
      <url>failover:(tcp://10.78.229.172:20001)</url> 
      <url>failover:(tcp://10.76.239.67:20001)</url>  
      <url>failover:(tcp://10.76.239.68:20001)</url>  
      <url>failover:(tcp://10.76.239.69:20001)</url>  
      <url>failover:(tcp://10.76.239.70:20001)</url>
	</cluster>
  </clusters>  
  <persistence> 
    <exceptionPersistence> 
      <!-- 持久化类型：db（数据库）,class(实现类) -->  
      <!-- 生产者异常处理,必须实现com.ai.aif.msgframe.common.ex.exception.IExceptionPersitence接口 -->  
      <producerExceptionClass>com.ai.iot.consumer.exceptionhandle.ProducerExceptionHandle</producerExceptionClass>  
      <!-- 消费者异常处理,必须实现com.ai.aif.msgframe.common.ex.exception.IExceptionPersitence接口 -->  
      <consumerExceptionClass>com.ai.aif.msgframe.consumer.ex.ConsumerExceptionHandle</consumerExceptionClass> 
    </exceptionPersistence>  
    <!-- logPersistence 消息是否进行客户端持久化-false、true--> 
  </persistence>
</msgframeCfg>